#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Huia
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 125)

attr_accessor :lexer, :scopes, :state

def initialize lexer
  @lexer  = lexer
  @state  = []
  @scopes = []
  push_scope
end

def ast
  @ast ||= do_parse
  @scopes.first
end

#def do_parse
#super
#rescue ParseError => e
#  raise SyntaxError, "#{e.message} on line #{@lexer.lineno}"
#end

#def on_error t, val, vstack
#  binding.pry
#end

def next_token
  nt = lexer.next_computed_token
  # just use a state stack for now, we'll have to do something
  # more sophisticated soon.
  if nt && nt.first == :state
    if nt.last
      state.push << nt.last
    else
      state.pop
    end
    next_token
  else
    nt
  end
end

def push_scope
  new_scope = Huia::AST::Scope.new scope
  new_scope.line = lexer.lineno
  scopes.push new_scope
  new_scope
end

def pop_scope
  scopes.pop
end

def scope
  scopes.last
end

def binary left, right, method
  node(:MethodCall, left, node(:CallSignature, method, [right]))
end

def node type, *args
  Huia::AST.const_get(type).new(*args).tap do |n|
    n.line = lexer.lineno
  end
end
alias n node

def allocate_local name
  node(:Variable, name).tap do |n|
    scope.allocate_local n
  end
end

def allocate_local_assignment name, value
  node(:Assignment, name, value).tap do |n|
    scope.allocate_local n
  end
end

def scope_instance
  node(:ScopeInstance, scope)
end

def constant name
  return scope_instance if name == 'self'
  node(:Constant, name)
end

def to_string expr
  node(:MethodCall, expr, node(:CallSignature, 'toString'))
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    48,    84,    23,    81,    20,    51,    77,    56,    56,    39,
    40,    45,    51,    51,    58,    22,    75,    20,    20,     5,
     6,    58,    58,    41,    42,    43,    19,    19,    44,    13,
    82,    47,    52,    53,    54,    55,    52,    53,    54,    55,
    56,    56,   110,   111,    56,    51,    51,     5,     6,    51,
    81,   100,   104,    77,    58,    58,    99,   101,    58,   107,
   112,   114,    99,    57,   118,   nil,   nil,    57,    52,    53,
    54,    55,   nil,   nil,   nil,   nil,    56,   nil,   nil,   nil,
   102,    51,   nil,    52,    53,    54,    55,   nil,   nil,   nil,
    58,    56,   nil,   nil,   nil,   nil,    51,   nil,   nil,    57,
    52,    53,    54,    55,   nil,    58,   nil,   nil,    56,   nil,
    95,   nil,   nil,    51,    57,     5,     6,    52,    53,    54,
    55,   nil,    58,   nil,   nil,    56,   nil,   nil,   nil,   nil,
    51,    57,    52,    53,    54,    55,   nil,   nil,   nil,    58,
    56,    54,    55,   nil,   nil,    51,   nil,    56,    57,   nil,
   nil,   nil,    51,   nil,    58,   nil,    52,    53,    54,    55,
   nil,    58,   113,    57,    56,   nil,   nil,    23,   nil,    51,
    57,   nil,   nil,   nil,    39,    40,    45,   nil,    58,   nil,
    22,   nil,   nil,    20,     5,     6,   nil,    57,    41,    42,
    43,    23,    19,    44,    13,   nil,    47,   nil,    39,    40,
    45,   nil,    66,   nil,    22,   nil,   nil,    20,   nil,   nil,
    65,   nil,    41,    42,    43,    23,    19,    44,    13,   nil,
    47,   nil,    39,    40,    45,   nil,   nil,   nil,    22,   nil,
   nil,    20,   nil,   nil,   nil,   nil,    41,    42,    43,    23,
    19,    44,    13,   nil,    47,   nil,    39,    40,    45,   nil,
   nil,   nil,    22,   nil,   nil,    20,   nil,   nil,   nil,   nil,
    41,    42,    43,    23,    19,    44,    13,   nil,    47,   nil,
    39,    40,    45,   nil,   nil,   nil,    22,   nil,   nil,    20,
   nil,   nil,   nil,   nil,    41,    42,    43,    23,    19,    44,
    13,   nil,    47,   nil,    39,    40,    45,   nil,   nil,   nil,
    22,   nil,   nil,    20,   nil,   nil,   nil,   nil,    41,    42,
    43,    23,    19,    44,    13,   nil,    47,   nil,    39,    40,
    45,   nil,   nil,   nil,    22,   nil,   nil,    20,   nil,   nil,
   nil,   nil,    41,    42,    43,    23,    19,    44,    13,   nil,
    47,   nil,    39,    40,    45,   nil,   nil,   nil,    22,   nil,
   nil,    20,   nil,   nil,   nil,   nil,    41,    42,    43,    23,
    19,    44,    13,   nil,    47,   nil,    39,    40,    45,   nil,
   nil,   nil,    22,   nil,   nil,    20,   nil,   nil,   nil,   nil,
    41,    42,    43,    23,    19,    44,    13,   nil,    47,   nil,
    39,    40,    45,   nil,   nil,   nil,    22,   nil,   nil,    20,
   nil,   nil,   nil,   nil,    41,    42,    43,    23,    19,    44,
    13,   nil,    47,   nil,    39,    40,    45,   nil,   nil,    95,
    22,   nil,   nil,    20,     5,     6,   nil,   nil,    41,    42,
    43,    23,    19,    44,    13,   nil,    47,   nil,    39,    40,
    45,   nil,   nil,   nil,    22,   nil,   nil,    20,   nil,   nil,
   nil,   nil,    41,    42,    43,    23,    19,    44,    13,   nil,
    47,   nil,    39,    40,    45,   nil,   nil,   nil,    22,   nil,
   nil,    20,   nil,   nil,   nil,   nil,    41,    42,    43,   nil,
    19,    44,    13,   nil,    47,    54,    55,   nil,   nil,   nil,
    23,    56,   nil,   nil,   nil,   nil,    51,    39,    40,    45,
   nil,   nil,    95,    22,   nil,    58,    20,     5,     6,   nil,
   nil,    41,    42,    43,    57,    19,    44,    13,    23,    47,
   nil,   nil,   nil,   nil,   nil,    39,    40,    45,   nil,   nil,
   nil,    22,   nil,   nil,    20,   nil,   nil,   nil,   nil,    41,
    42,    43,   nil,    19,    44,    13,   nil,    47 ]

racc_action_check = [
     1,    51,     1,    47,    17,    89,    47,    87,    88,     1,
     1,     1,    87,    88,    89,     1,    23,    51,     1,     1,
     1,    87,    88,     1,     1,     1,    51,     1,     1,     1,
    48,     1,     3,     3,     3,     3,    69,    69,    69,    69,
     3,    90,    96,    96,    69,     3,    90,     3,     3,    69,
    76,    69,    76,    76,     3,    90,    64,    73,    69,    79,
    98,   110,   111,     3,   115,   nil,   nil,    69,    74,    74,
    74,    74,   nil,   nil,   nil,   nil,    74,   nil,   nil,   nil,
    74,    74,   nil,    91,    91,    91,    91,   nil,   nil,   nil,
    74,    91,   nil,   nil,   nil,   nil,    91,   nil,   nil,    74,
    93,    93,    93,    93,   nil,    91,   nil,   nil,    93,   nil,
    93,   nil,   nil,    93,    91,    93,    93,   103,   103,   103,
   103,   nil,    93,   nil,   nil,   103,   nil,   nil,   nil,   nil,
   103,    93,   106,   106,   106,   106,   nil,   nil,   nil,   103,
   106,    85,    85,   nil,   nil,   106,   nil,    85,   103,   nil,
   nil,   nil,    85,   nil,   106,   nil,   117,   117,   117,   117,
   nil,    85,   106,   106,   117,   nil,   nil,     0,   nil,   117,
    85,   nil,   nil,   nil,     0,     0,     0,   nil,   117,   nil,
     0,   nil,   nil,     0,     0,     0,   nil,   117,     0,     0,
     0,    20,     0,     0,     0,   nil,     0,   nil,    20,    20,
    20,   nil,    20,   nil,    20,   nil,   nil,    20,   nil,   nil,
    20,   nil,    20,    20,    20,    22,    20,    20,    20,   nil,
    20,   nil,    22,    22,    22,   nil,   nil,   nil,    22,   nil,
   nil,    22,   nil,   nil,   nil,   nil,    22,    22,    22,    52,
    22,    22,    22,   nil,    22,   nil,    52,    52,    52,   nil,
   nil,   nil,    52,   nil,   nil,    52,   nil,   nil,   nil,   nil,
    52,    52,    52,    53,    52,    52,    52,   nil,    52,   nil,
    53,    53,    53,   nil,   nil,   nil,    53,   nil,   nil,    53,
   nil,   nil,   nil,   nil,    53,    53,    53,    54,    53,    53,
    53,   nil,    53,   nil,    54,    54,    54,   nil,   nil,   nil,
    54,   nil,   nil,    54,   nil,   nil,   nil,   nil,    54,    54,
    54,    55,    54,    54,    54,   nil,    54,   nil,    55,    55,
    55,   nil,   nil,   nil,    55,   nil,   nil,    55,   nil,   nil,
   nil,   nil,    55,    55,    55,    56,    55,    55,    55,   nil,
    55,   nil,    56,    56,    56,   nil,   nil,   nil,    56,   nil,
   nil,    56,   nil,   nil,   nil,   nil,    56,    56,    56,    57,
    56,    56,    56,   nil,    56,   nil,    57,    57,    57,   nil,
   nil,   nil,    57,   nil,   nil,    57,   nil,   nil,   nil,   nil,
    57,    57,    57,    58,    57,    57,    57,   nil,    57,   nil,
    58,    58,    58,   nil,   nil,   nil,    58,   nil,   nil,    58,
   nil,   nil,   nil,   nil,    58,    58,    58,    63,    58,    58,
    58,   nil,    58,   nil,    63,    63,    63,   nil,   nil,    63,
    63,   nil,   nil,    63,    63,    63,   nil,   nil,    63,    63,
    63,    75,    63,    63,    63,   nil,    63,   nil,    75,    75,
    75,   nil,   nil,   nil,    75,   nil,   nil,    75,   nil,   nil,
   nil,   nil,    75,    75,    75,    77,    75,    75,    75,   nil,
    75,   nil,    77,    77,    77,   nil,   nil,   nil,    77,   nil,
   nil,    77,   nil,   nil,   nil,   nil,    77,    77,    77,   nil,
    77,    77,    77,   nil,    77,    86,    86,   nil,   nil,   nil,
    92,    86,   nil,   nil,   nil,   nil,    86,    92,    92,    92,
   nil,   nil,    92,    92,   nil,    86,    92,    92,    92,   nil,
   nil,    92,    92,    92,    86,    92,    92,    92,   112,    92,
   nil,   nil,   nil,   nil,   nil,   112,   112,   112,   nil,   nil,
   nil,   112,   nil,   nil,   112,   nil,   nil,   nil,   nil,   112,
   112,   112,   nil,   112,   112,   112,   nil,   112 ]

racc_action_pointer = [
   165,     0,   nil,    28,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   -14,   nil,   nil,
   189,   nil,   213,    13,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   -27,    30,   nil,
   nil,    -1,   237,   261,   285,   309,   333,   357,   381,   nil,
   nil,   nil,   nil,   405,    54,   nil,   nil,   nil,   nil,    32,
   nil,   nil,   nil,    38,    64,   429,    20,   453,   nil,    29,
   nil,   nil,   nil,   nil,   nil,   135,   479,    -5,    -4,   -12,
    29,    79,   488,    96,   nil,   nil,    21,   nil,    57,   nil,
   nil,   nil,   nil,   113,   nil,   nil,   128,   nil,   nil,   nil,
    42,    60,   516,   nil,   nil,    51,   nil,   152,   nil ]

racc_action_default = [
   -92,   -92,    -1,    -4,    -5,    -6,    -7,   -10,   -11,   -12,
   -13,   -14,   -15,   -16,   -34,   -35,   -38,   -39,   -40,   -41,
   -92,   -49,   -92,   -52,   -53,   -54,   -55,   -56,   -57,   -58,
   -59,   -60,   -69,   -70,   -71,   -72,   -73,   -74,   -75,   -76,
   -77,   -78,   -79,   -80,   -81,   -82,   -83,   -92,   -92,    -2,
    -3,   -92,   -92,   -92,   -92,   -92,   -92,   -92,   -92,   -50,
   -17,   -18,   -19,   -92,   -92,   -25,   -26,   -27,   -28,   -45,
   -42,   -43,   -44,   -47,   -92,   -92,   -92,   -92,   -86,   -88,
   -89,   -90,   119,   -36,   -37,   -62,   -63,   -64,   -65,   -66,
   -67,   -68,   -92,    -4,   -22,   -23,   -92,   -29,   -31,   -33,
   -46,   -48,   -51,   -61,   -84,   -87,   -92,   -91,   -20,   -21,
    -9,   -92,   -92,   -85,    -8,   -92,   -30,   -32,   -24 ]

racc_goto_table = [
    69,    50,    74,    49,     1,    97,   115,    73,    60,    61,
    94,    62,    78,    63,    67,    64,    96,    68,    83,    59,
    70,    71,    72,    76,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    85,    86,    87,    88,    89,    90,    91,   108,
   109,   105,   nil,    93,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   116,   nil,   nil,   103,   nil,   106,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    92,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    50,   117,   nil,    49 ]

racc_goto_check = [
     3,     4,     3,     2,     1,    22,     5,    12,    13,    14,
    17,    15,    51,    16,    18,    19,    20,    21,    26,    29,
    30,    31,    32,    49,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     3,     3,     3,     3,     3,     3,     3,    17,
    17,    51,   nil,     3,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    22,   nil,   nil,     3,   nil,     3,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     1,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     4,     3,   nil,     2 ]

racc_goto_pointer = [
   nil,     4,     2,   -20,    -2,  -104,   nil,   nil,   nil,   nil,
   nil,   nil,   -13,   -12,   -11,    -9,    -7,   -53,    -6,    -5,
   -48,    -3,   -59,   nil,   nil,   nil,   -33,   nil,   nil,     2,
     0,     1,     2,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   -24,
   nil,   -35,   nil ]

racc_goto_default = [
   nil,   nil,     2,     3,     4,   nil,     7,     8,     9,    10,
    11,    12,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    98,    14,    15,    16,    17,    18,    21,
   nil,   nil,   nil,    24,    25,    26,    27,    28,    29,    30,
    31,    32,    33,    34,    35,    36,    37,    38,    46,   nil,
    80,   nil,    79 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 37, :_reduce_none,
  2, 37, :_reduce_2,
  2, 38, :_reduce_3,
  1, 38, :_reduce_4,
  1, 38, :_reduce_5,
  1, 40, :_reduce_none,
  1, 40, :_reduce_none,
  1, 41, :_reduce_none,
  0, 41, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 46, :_reduce_16,
  1, 48, :_reduce_none,
  1, 48, :_reduce_none,
  1, 48, :_reduce_none,
  3, 49, :_reduce_20,
  3, 50, :_reduce_21,
  2, 51, :_reduce_22,
  1, 53, :_reduce_23,
  5, 54, :_reduce_24,
  1, 55, :_reduce_25,
  1, 57, :_reduce_26,
  1, 52, :_reduce_none,
  1, 52, :_reduce_none,
  1, 56, :_reduce_none,
  3, 56, :_reduce_none,
  1, 58, :_reduce_31,
  3, 58, :_reduce_32,
  1, 59, :_reduce_33,
  1, 45, :_reduce_none,
  1, 45, :_reduce_none,
  3, 60, :_reduce_36,
  3, 60, :_reduce_37,
  1, 61, :_reduce_38,
  1, 62, :_reduce_none,
  1, 62, :_reduce_none,
  1, 64, :_reduce_41,
  2, 65, :_reduce_42,
  1, 66, :_reduce_none,
  1, 66, :_reduce_none,
  1, 67, :_reduce_none,
  2, 67, :_reduce_none,
  1, 68, :_reduce_none,
  2, 68, :_reduce_none,
  1, 63, :_reduce_49,
  2, 63, :_reduce_50,
  3, 43, :_reduce_51,
  1, 47, :_reduce_52,
  1, 44, :_reduce_none,
  1, 44, :_reduce_none,
  1, 44, :_reduce_none,
  1, 44, :_reduce_none,
  1, 44, :_reduce_none,
  1, 44, :_reduce_none,
  1, 44, :_reduce_none,
  1, 44, :_reduce_none,
  3, 69, :_reduce_61,
  3, 70, :_reduce_62,
  3, 71, :_reduce_63,
  3, 72, :_reduce_64,
  3, 73, :_reduce_65,
  3, 74, :_reduce_66,
  3, 75, :_reduce_67,
  3, 76, :_reduce_68,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  1, 78, :_reduce_76,
  1, 77, :_reduce_77,
  1, 80, :_reduce_78,
  1, 81, :_reduce_79,
  1, 82, :_reduce_80,
  1, 83, :_reduce_81,
  1, 79, :_reduce_82,
  1, 79, :_reduce_none,
  3, 84, :_reduce_84,
  3, 86, :_reduce_85,
  1, 85, :_reduce_86,
  2, 85, :_reduce_87,
  1, 87, :_reduce_88,
  1, 87, :_reduce_89,
  1, 88, :_reduce_90,
  2, 88, :_reduce_91 ]

racc_reduce_n = 92

racc_shift_n = 119

racc_token_table = {
  false => 0,
  :error => 1,
  :IDENTIFIER => 2,
  :EQUAL => 3,
  :PLUS => 4,
  :MINUS => 5,
  :ASTERISK => 6,
  :FWD_SLASH => 7,
  :COLON => 8,
  :FLOAT => 9,
  :INTEGER => 10,
  :STRING => 11,
  :EXPO => 12,
  :INDENT => 13,
  :OUTDENT => 14,
  :OPAREN => 15,
  :CPAREN => 16,
  :DOT => 17,
  :SIGNATURE => 18,
  :NL => 19,
  :EOF => 20,
  :PIPE => 21,
  :COMMA => 22,
  :NIL => 23,
  :TRUE => 24,
  :FALSE => 25,
  :EQUALITY => 26,
  :CALL => 27,
  :SELF => 28,
  :CONSTANT => 29,
  :CHAR => 30,
  :DOUBLE_TICK_STRING => 31,
  :DOUBLE_TICK_STRING_END => 32,
  :INTERPOLATE_START => 33,
  :INTERPOLATE_END => 34,
  :PERCENT => 35 }

racc_nt_base = 36

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IDENTIFIER",
  "EQUAL",
  "PLUS",
  "MINUS",
  "ASTERISK",
  "FWD_SLASH",
  "COLON",
  "FLOAT",
  "INTEGER",
  "STRING",
  "EXPO",
  "INDENT",
  "OUTDENT",
  "OPAREN",
  "CPAREN",
  "DOT",
  "SIGNATURE",
  "NL",
  "EOF",
  "PIPE",
  "COMMA",
  "NIL",
  "TRUE",
  "FALSE",
  "EQUALITY",
  "CALL",
  "SELF",
  "CONSTANT",
  "CHAR",
  "DOUBLE_TICK_STRING",
  "DOUBLE_TICK_STRING_END",
  "INTERPOLATE_START",
  "INTERPOLATE_END",
  "PERCENT",
  "$start",
  "statements",
  "statement",
  "expr",
  "eol",
  "nlq",
  "literal",
  "grouped_expr",
  "binary_op",
  "method_call",
  "constant",
  "variable",
  "indented",
  "indented_w_stmts",
  "indented_w_expr",
  "indented_wo_stmts",
  "indent",
  "outdent",
  "indent_w_args",
  "indent_pipe",
  "indent_args",
  "indent_wo_args",
  "indent_arg",
  "arg_var",
  "method_call_on_object",
  "method_call_on_self",
  "call_signature",
  "call_arguments",
  "call_simple_name",
  "call_argument",
  "call_passed_arg",
  "call_passed_simple",
  "call_passed_indented",
  "assignment",
  "addition",
  "subtraction",
  "multiplication",
  "division",
  "exponentiation",
  "modulo",
  "equality",
  "integer",
  "float",
  "string",
  "nil",
  "true",
  "false",
  "self",
  "interpolated_string",
  "interpolated_string_contents",
  "interpolation",
  "interpolated_string_chunk",
  "chars" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'parser.racc', 14)
  def _reduce_2(val, _values, result)
     return scope 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 16)
  def _reduce_3(val, _values, result)
     return scope.append val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 17)
  def _reduce_4(val, _values, result)
     return scope.append val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 18)
  def _reduce_5(val, _values, result)
     return scope 
    result
  end
.,.,

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

module_eval(<<'.,.,', 'parser.racc', 30)
  def _reduce_16(val, _values, result)
     return constant val[0] 
    result
  end
.,.,

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

module_eval(<<'.,.,', 'parser.racc', 35)
  def _reduce_20(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 36)
  def _reduce_21(val, _values, result)
     return val[0].append(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 37)
  def _reduce_22(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 38)
  def _reduce_23(val, _values, result)
     return pop_scope 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 41)
  def _reduce_24(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 42)
  def _reduce_25(val, _values, result)
     return push_scope 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 43)
  def _reduce_26(val, _values, result)
     return push_scope 
    result
  end
.,.,

# reduce 27 omitted

# reduce 28 omitted

# reduce 29 omitted

# reduce 30 omitted

module_eval(<<'.,.,', 'parser.racc', 49)
  def _reduce_31(val, _values, result)
     return scope.add_argument val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 50)
  def _reduce_32(val, _values, result)
     return n :Assignment, val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 51)
  def _reduce_33(val, _values, result)
     return n :Variable, val[0] 
    result
  end
.,.,

# reduce 34 omitted

# reduce 35 omitted

module_eval(<<'.,.,', 'parser.racc', 55)
  def _reduce_36(val, _values, result)
     return n :MethodCall, val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 56)
  def _reduce_37(val, _values, result)
     return n :MethodCall, val[0], n(:CallSignature, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 57)
  def _reduce_38(val, _values, result)
     return n :MethodCall, scope_instance, val[0] 
    result
  end
.,.,

# reduce 39 omitted

# reduce 40 omitted

module_eval(<<'.,.,', 'parser.racc', 61)
  def _reduce_41(val, _values, result)
     return n :CallSignature, val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 62)
  def _reduce_42(val, _values, result)
     return n :CallSignature, val[0], [val[1]] 
    result
  end
.,.,

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

module_eval(<<'.,.,', 'parser.racc', 69)
  def _reduce_49(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 70)
  def _reduce_50(val, _values, result)
     return val[0].concat_signature val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 72)
  def _reduce_51(val, _values, result)
     return n :Expression, val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 74)
  def _reduce_52(val, _values, result)
     return allocate_local val[0] 
    result
  end
.,.,

# reduce 53 omitted

# reduce 54 omitted

# reduce 55 omitted

# reduce 56 omitted

# reduce 57 omitted

# reduce 58 omitted

# reduce 59 omitted

# reduce 60 omitted

module_eval(<<'.,.,', 'parser.racc', 85)
  def _reduce_61(val, _values, result)
     return allocate_local_assignment val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 86)
  def _reduce_62(val, _values, result)
     return binary val[0], val[2], 'plus:' 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 87)
  def _reduce_63(val, _values, result)
     return binary val[0], val[2], 'minus:' 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 88)
  def _reduce_64(val, _values, result)
     return binary val[0], val[2], 'multiplyBy:' 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 89)
  def _reduce_65(val, _values, result)
     return binary val[0], val[2], 'divideBy:' 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 90)
  def _reduce_66(val, _values, result)
     return binary val[0], val[2], 'toThePowerOf:' 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 91)
  def _reduce_67(val, _values, result)
     return binary val[0], val[2], 'moduloOf:' 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 92)
  def _reduce_68(val, _values, result)
     return binary val[0], val[2], 'isEqualTo:' 
    result
  end
.,.,

# reduce 69 omitted

# reduce 70 omitted

# reduce 71 omitted

# reduce 72 omitted

# reduce 73 omitted

# reduce 74 omitted

# reduce 75 omitted

module_eval(<<'.,.,', 'parser.racc', 102)
  def _reduce_76(val, _values, result)
     return n :Float,   val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 103)
  def _reduce_77(val, _values, result)
     return n :Integer, val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 104)
  def _reduce_78(val, _values, result)
     return n :Nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 105)
  def _reduce_79(val, _values, result)
     return n :True 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 106)
  def _reduce_80(val, _values, result)
     return n :False 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 107)
  def _reduce_81(val, _values, result)
     return n :Self 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 109)
  def _reduce_82(val, _values, result)
     return n :String,  val[0] 
    result
  end
.,.,

# reduce 83 omitted

module_eval(<<'.,.,', 'parser.racc', 112)
  def _reduce_84(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 113)
  def _reduce_85(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 114)
  def _reduce_86(val, _values, result)
     return n :InterpolatedString, val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 115)
  def _reduce_87(val, _values, result)
     val[0].append(val[1]); return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 116)
  def _reduce_88(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 117)
  def _reduce_89(val, _values, result)
     return to_string(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 119)
  def _reduce_90(val, _values, result)
     return n :String, val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 120)
  def _reduce_91(val, _values, result)
     val[0].append(val[1]); return val[0] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Huia
