klass = self
Stdout = Huia.requireCore: 'Stdout'

operation = Closure.create: |otherNumber,operation|
  Stdout.putString: "otherNumber: #{otherNumber} operation: #{operation}"
  thisNumber = Ruby.createFromObject: self
  value = thisNumber.send: operation withArgs: otherNumber
  klass.createFromValue: value

def: 'plus:' as: |other|
  operation.callWithSelf: self andArgs: other, '+'

def: 'minus:' as: |other|
  operation.callWithSelf: self andArgs: other, '-'

def: 'multiplyBy:' as: |other|
  operation.callWithSelf: self andArgs: other, '*'

def: 'divideBy:' as: |other|
  operation.callWithSelf: self andArgs: other, '/'

def: 'toThePowerOf:' as: |other|
  operation.callWithSelf: self andArgs: other, '**'

def: 'moduloOf:' as: |other|
  operation.callWithSelf: self andArgs: other, '%'
