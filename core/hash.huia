Integer = Huia.requireCore: 'integer'

def: 'keys' as:
  keys = Ruby.createFromObject: self
  .send: 'keys'
  .toArray

def: 'values' as:
  values = Ruby.createFromObject: self
  .send: 'values'
  .toArray

def: 'size' as:
  size = Ruby.createFromObject: self
  .send: 'size'
  .toInteger

def: 'inspect' as:
  result = '{'

  last = self.size

  Ruby.createFromObject: self.keys
  .send: 'each_with_index' withBlock: |key,index|
    index = Integer.createFromValue: index
    index = index + 1
    value = self.at: key
    result.push: ' '
    result.push: key.inspect
    result.push: ' : '
    result.push: value.inspect

    if: (last == index) then:
      result.push: ' '

    if: (last != index) then:
      result.push: ','

  result.push: '}'
